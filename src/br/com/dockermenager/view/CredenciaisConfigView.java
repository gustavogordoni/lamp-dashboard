/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.dockermenager.view;


import br.com.dockermenager.ctr.ServicoCTR;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author gustavo
 */
public class CredenciaisConfigView extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(CredenciaisConfigView.class.getName());

    private final ServicoCTR controller = new ServicoCTR();
    private final String dockerComposeFilePath;

    /**
     * Creates new form CredenciaisView
     * @param dockerComposeFilePath
     */
    public CredenciaisConfigView(String dockerComposeFilePath) {
        this.dockerComposeFilePath = dockerComposeFilePath;
        initComponents();

        setTitle("Configuração de Credenciais");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        controller.init(this.dockerComposeFilePath);

        preencherInputs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelPHP = new javax.swing.JLabel();
        labelPostgresPassword = new javax.swing.JLabel();
        labelPostgresUser = new javax.swing.JLabel();
        inputPostgresUser = new javax.swing.JTextField();
        inputPostgresPassword = new javax.swing.JPasswordField();
        btnPostgresPassword = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        labelMySQL = new javax.swing.JLabel();
        labelPostgres1 = new javax.swing.JLabel();
        labelPostgres2 = new javax.swing.JLabel();
        inputMySQLUser = new javax.swing.JTextField();
        inputMySQLPassword = new javax.swing.JPasswordField();
        btnMySQLPassword = new javax.swing.JButton();
        btnRedefinir = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        labelPgAdmin = new javax.swing.JLabel();
        labelPgAdminPassword = new javax.swing.JLabel();
        labelPgAdminEmail = new javax.swing.JLabel();
        inputPgAdminEmail = new javax.swing.JTextField();
        inputPgAdminPassword = new javax.swing.JPasswordField();
        btnPgAdminPassword = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelPHP.setFont(new java.awt.Font("JetBrains Mono", 1, 18)); // NOI18N
        labelPHP.setText("Postgres");

        labelPostgresPassword.setText("Senha");

        labelPostgresUser.setText("Usuário");

        inputPostgresUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputPostgresUser.setText("postgres");
        inputPostgresUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPostgresUserActionPerformed(evt);
            }
        });

        inputPostgresPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputPostgresPassword.setText("postdba");

        btnPostgresPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/dockermenager/view/eye.png"))); // NOI18N
        btnPostgresPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostgresPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPHP, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelPostgresPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelPostgresUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputPostgresUser, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(inputPostgresPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPostgresPassword)))
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labelPHP)
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPostgresUser)
                    .addComponent(inputPostgresUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(labelPostgresPassword))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPostgresPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(inputPostgresPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelMySQL.setFont(new java.awt.Font("JetBrains Mono", 1, 18)); // NOI18N
        labelMySQL.setText("MySQL");

        labelPostgres1.setText("Senha");

        labelPostgres2.setText("Usuário");

        inputMySQLUser.setEditable(false);
        inputMySQLUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputMySQLUser.setText("root");

        inputMySQLPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputMySQLPassword.setText("root");
        inputMySQLPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMySQLPasswordActionPerformed(evt);
            }
        });

        btnMySQLPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/dockermenager/view/eye.png"))); // NOI18N
        btnMySQLPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMySQLPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelMySQL, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelPostgres2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelPostgres1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputMySQLUser, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(inputMySQLPassword))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMySQLPassword)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labelMySQL)
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPostgres2)
                    .addComponent(inputMySQLUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(labelPostgres1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMySQLPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputMySQLPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );

        btnRedefinir.setBackground(new java.awt.Color(255, 102, 102));
        btnRedefinir.setForeground(new java.awt.Color(0, 0, 0));
        btnRedefinir.setText("Redefinir para padrão");
        btnRedefinir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedefinirActionPerformed(evt);
            }
        });

        btnSalvar.setBackground(new java.awt.Color(102, 255, 102));
        btnSalvar.setForeground(new java.awt.Color(0, 0, 0));
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelPgAdmin.setFont(new java.awt.Font("JetBrains Mono", 1, 18)); // NOI18N
        labelPgAdmin.setText("PgAdmin");

        labelPgAdminPassword.setText("Senha");

        labelPgAdminEmail.setText("Email");

        inputPgAdminEmail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputPgAdminEmail.setText("servidor@email.com");
        inputPgAdminEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPgAdminEmailActionPerformed(evt);
            }
        });

        inputPgAdminPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputPgAdminPassword.setText("postdba");
        inputPgAdminPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPgAdminPasswordActionPerformed(evt);
            }
        });

        btnPgAdminPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/dockermenager/view/eye.png"))); // NOI18N
        btnPgAdminPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPgAdminPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPgAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelPgAdminPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelPgAdminEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputPgAdminEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(inputPgAdminPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPgAdminPassword)))
                .addGap(20, 20, 20))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labelPgAdmin)
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPgAdminEmail)
                    .addComponent(inputPgAdminEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(labelPgAdminPassword))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPgAdminPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(inputPgAdminPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnRedefinir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnRedefinir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRedefinirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedefinirActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this,
                "Redefinir credenciais para os valores padrão?",
                "Confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                derrubarContainersAtivos();
                controller.redefinirCredenciais();
                preencherInputs();
                JOptionPane.showMessageDialog(this, "Credenciais redefinidas para padrão.");
                System.exit(0);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao redefinir: " + e.getMessage(),
                        "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRedefinirActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this,
                "Salvar novas credenciais?\nTodos os containers ativos serão PARADOS e a aplicação será reiniciada.",
                "Confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Map<String, String> variaveis = new LinkedHashMap<>();
                variaveis.put("POSTGRES_USER", inputPostgresUser.getText());
                variaveis.put("POSTGRES_PASSWORD", new String(inputPostgresPassword.getPassword()));
                variaveis.put("PGADMIN_DEFAULT_EMAIL", inputPgAdminEmail.getText());
                variaveis.put("PGADMIN_DEFAULT_PASSWORD", new String(inputPgAdminPassword.getPassword()));
                variaveis.put("MYSQL_ROOT_PASSWORD", new String(inputMySQLPassword.getPassword()));

                derrubarContainersAtivos();

                controller.salvar(variaveis);

                JOptionPane.showMessageDialog(this, "Credenciais salvas com sucesso!",
                        "Sucesso", JOptionPane.INFORMATION_MESSAGE);

                System.exit(0);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao salvar credenciais: " + e.getMessage(),
                        "Erro", JOptionPane.ERROR_MESSAGE);
                logger.severe(() -> "Erro ao salvar credenciais: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void inputMySQLPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMySQLPasswordActionPerformed

    }//GEN-LAST:event_inputMySQLPasswordActionPerformed

    private void btnPostgresPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostgresPasswordActionPerformed
        togglePassword(inputPostgresPassword);
    }//GEN-LAST:event_btnPostgresPasswordActionPerformed

    private void btnMySQLPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMySQLPasswordActionPerformed
        togglePassword(inputMySQLPassword);
    }//GEN-LAST:event_btnMySQLPasswordActionPerformed

    private void btnPgAdminPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPgAdminPasswordActionPerformed
        togglePassword(inputPgAdminPassword);
    }//GEN-LAST:event_btnPgAdminPasswordActionPerformed

    private void inputPostgresUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPostgresUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPostgresUserActionPerformed

    private void inputPgAdminEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPgAdminEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPgAdminEmailActionPerformed

    private void inputPgAdminPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPgAdminPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPgAdminPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
//            logger.log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(() -> new CredenciaisView().setVisible(true));
//    }
    private void preencherInputs() {
        inputPostgresUser.setText(controller.getEnv("POSTGRES_USER", "postgres"));
        inputPostgresPassword.setText(controller.getEnv("POSTGRES_PASSWORD", "postdba"));
        inputPgAdminEmail.setText(controller.getEnv("PGADMIN_DEFAULT_EMAIL", "postgres@servidor.com"));
        inputPgAdminPassword.setText(controller.getEnv("PGADMIN_DEFAULT_PASSWORD", "postdba"));
        inputMySQLPassword.setText(controller.getEnv("MYSQL_ROOT_PASSWORD", "root"));
    }

    private void togglePassword(JPasswordField field) {
        if (field.getEchoChar() == (char) 0) {
            field.setEchoChar('•');
        } else {
            field.setEchoChar((char) 0);
        }
    }

    private void derrubarContainersAtivos() {
        if (controller.isRunning(controller.getEnv("POSTGRES_CONTAINER_NAME", "birazn-ifsp-pgsql"))) {
            controller.parar(this.dockerComposeFilePath, "postgres");
        }
        if (controller.isRunning(controller.getEnv("PGADMIN_CONTAINER_NAME", "birazn-ifsp-pgadmin"))) {
            controller.parar(this.dockerComposeFilePath, "pgadmin");
        }
        if (controller.isRunning(controller.getEnv("MYSQL_CONTAINER_NAME", "birazn-ifsp-mysql"))) {
            controller.parar(this.dockerComposeFilePath, "mysql");
        }
        if (controller.isRunning(controller.getEnv("PMA_CONTAINER_NAME", "birazn-ifsp-mysql"))) {
            controller.parar(this.dockerComposeFilePath, "phpmyadmin");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMySQLPassword;
    private javax.swing.JButton btnPgAdminPassword;
    private javax.swing.JButton btnPostgresPassword;
    private javax.swing.JButton btnRedefinir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JPasswordField inputMySQLPassword;
    private javax.swing.JTextField inputMySQLUser;
    private javax.swing.JTextField inputPgAdminEmail;
    private javax.swing.JPasswordField inputPgAdminPassword;
    private javax.swing.JPasswordField inputPostgresPassword;
    private javax.swing.JTextField inputPostgresUser;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelMySQL;
    private javax.swing.JLabel labelPHP;
    private javax.swing.JLabel labelPgAdmin;
    private javax.swing.JLabel labelPgAdminEmail;
    private javax.swing.JLabel labelPgAdminPassword;
    private javax.swing.JLabel labelPostgres1;
    private javax.swing.JLabel labelPostgres2;
    private javax.swing.JLabel labelPostgresPassword;
    private javax.swing.JLabel labelPostgresUser;
    // End of variables declaration//GEN-END:variables
}
