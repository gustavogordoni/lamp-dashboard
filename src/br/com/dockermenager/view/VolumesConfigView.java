/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.dockermenager.view;

import br.com.dockermenager.ctr.ServicoCTR;
import java.awt.event.ActionEvent;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author gustavo
 */
public class VolumesConfigView extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(VolumesConfigView.class.getName());

    private final ServicoCTR controller = new ServicoCTR();
    private final String dockerComposeFilePath;

    /**
     * Creates new form VolumesConfigView
     *
     * @param dockerComposeFilePath
     */
    public VolumesConfigView(String dockerComposeFilePath) {
        this.dockerComposeFilePath = dockerComposeFilePath;
        initComponents();
        setTitle("Configuração de Volumes");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        controller.init(this.dockerComposeFilePath);
        preencherInputVolumes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        labelPHP = new javax.swing.JLabel();
        inputPHPVolume = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        labelPHP1 = new javax.swing.JLabel();
        inputPostgresVolume = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        labelPHP2 = new javax.swing.JLabel();
        inputMySQLVolume = new javax.swing.JTextField();
        btnRedefinir = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelPHP.setText("PHP");

        inputPHPVolume.setFont(new java.awt.Font("JetBrains Mono", 0, 16)); // NOI18N
        inputPHPVolume.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputPHPVolume.setText("./web:/var/www/html");
        inputPHPVolume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPHPVolumeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labelPHP, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(inputPHPVolume)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPHP)
                    .addComponent(inputPHPVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelPHP1.setText("Postgres");

        inputPostgresVolume.setFont(new java.awt.Font("JetBrains Mono", 0, 16)); // NOI18N
        inputPostgresVolume.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputPostgresVolume.setText("./postgres:/var/lib/postgresql/data");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labelPHP1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(inputPostgresVolume, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPHP1)
                    .addComponent(inputPostgresVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelPHP2.setText("MySQL");

        inputMySQLVolume.setFont(new java.awt.Font("JetBrains Mono", 0, 16)); // NOI18N
        inputMySQLVolume.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputMySQLVolume.setText("./mysql:/var/lib/mysql");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labelPHP2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(inputMySQLVolume)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPHP2)
                    .addComponent(inputMySQLVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        btnRedefinir.setBackground(new java.awt.Color(255, 102, 102));
        btnRedefinir.setForeground(new java.awt.Color(0, 0, 0));
        btnRedefinir.setText("Redefinir para padrão");
        btnRedefinir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedefinirActionPerformed(evt);
            }
        });

        btnSalvar.setBackground(new java.awt.Color(102, 255, 102));
        btnSalvar.setForeground(new java.awt.Color(0, 0, 0));
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnRedefinir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnRedefinir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputPHPVolumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPHPVolumeActionPerformed

    }//GEN-LAST:event_inputPHPVolumeActionPerformed

    private void btnRedefinirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedefinirActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this,
            "Redefinir volumes para os valores padrão?",
            "Confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                derrubarContainersAtivos();
                controller.redefinirVolumes();
                preencherInputVolumes();
                JOptionPane.showMessageDialog(this, "Configurações redefinidas.");
                System.exit(0);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao redefinir: " + e.getMessage(),
                        "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRedefinirActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this,
                "Salvar novas configurações de volumes?\nContainers ativos serão parados.",
                "Confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Map<String, String> variaveis = new LinkedHashMap<>();
                variaveis.put("PHP_VOLUME", inputPHPVolume.getText());
                variaveis.put("POSTGRES_VOLUME", inputPostgresVolume.getText());
                variaveis.put("MYSQL_VOLUME", inputMySQLVolume.getText());

                derrubarContainersAtivos();
                controller.salvar(variaveis);

                JOptionPane.showMessageDialog(this, "Volumes atualizados com sucesso!",
                        "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                System.exit(0);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao salvar: " + e.getMessage(),
                        "Erro", JOptionPane.ERROR_MESSAGE);
                logger.severe(() -> "Erro ao salvar volumes: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void preencherInputVolumes() {
        inputPHPVolume.setText(controller.getEnv("PHP_VOLUME", "./web:/var/www/html"));
        inputPostgresVolume.setText(controller.getEnv("POSTGRES_VOLUME", "./postgres:/var/lib/postgresql/data"));
        inputMySQLVolume.setText(controller.getEnv("MYSQL_VOLUME", "./mysql:/var/lib/mysql"));
    }

    private void derrubarContainersAtivos() {
        if (controller.isRunning(controller.getEnv("PHP_CONTAINER_NAME", "birazn-ifsp-php"))) {
            controller.parar(this.dockerComposeFilePath, "php");
        }
        if (controller.isRunning(controller.getEnv("MYSQL_CONTAINER_NAME", "birazn-ifsp-mysql"))) {
            controller.parar(this.dockerComposeFilePath, "mysql");
        }
        if (controller.isRunning(controller.getEnv("POSTGRES_CONTAINER_NAME", "birazn-ifsp-pgsql"))) {
            controller.parar(this.dockerComposeFilePath, "postgres");
        }
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
//            logger.log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(() -> new VolumesConfigView().setVisible(true));
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRedefinir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JTextField inputMySQLVolume;
    private javax.swing.JTextField inputPHPVolume;
    private javax.swing.JTextField inputPostgresVolume;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelPHP;
    private javax.swing.JLabel labelPHP1;
    private javax.swing.JLabel labelPHP2;
    // End of variables declaration//GEN-END:variables
}
